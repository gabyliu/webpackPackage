!function(I){function Q(F){if(C[F])return C[F].exports;var g=C[F]={exports:{},id:F,loaded:!1};return I[F].call(g.exports,g,g.exports,Q),g.loaded=!0,g.exports}var C={};return Q.m=I,Q.c=C,Q.p="",Q(0)}({0:function(I,Q,C){I.exports=C(5)},5:function(module,exports,__webpack_require__){eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Inner = exports.CheckBox = undefined;\n\n__webpack_require__(10);\n\nArray.prototype.update = function (val) {\n    var index = this.indexOf(val);\n    if (index > -1) {\n        this.splice(index, 1);\n    } else {\n        this.push(val);\n    }\n};\nvar CheckBox = React.createClass({\n    displayName: 'CheckBox',\n\n    handleClick: function handleClick(item, index) {\n        var valSelected = this.props.data.value;\n        valSelected.update(item);\n        this.props.data.handle({\n            value: valSelected, //array，选中的值\n            status: this.checkPattern(valSelected), //值的状态，成功：'suc'，超过可选个数：'overLimit'，小于可选个数：'lessLimit'\n            index: this.props.data.response.index, //事件id，也就是reponse.index\n            v: this.props.data.response.v //要带回来的值，也就是reponse.v\n        });\n    },\n    checkPattern: function checkPattern(vals) {\n        if (typeof this.props.data.reg.max != 'undefined') {\n            if (vals.length > this.props.data.reg.max) {\n                return 'overLimit';\n            }\n        }\n        if (typeof this.props.data.reg.min != 'undefined') {\n            if (vals.length < this.props.data.reg.min) {\n                return 'lessLimit';\n            }\n        }\n        return 'suc';\n    },\n    render: function render() {\n        var mainClass = 'frm_checkbox_area ' + this.props.data.extendClass,\n            _this = this,\n            checkBoxes = this.props.data.init.map(function (list) {\n            var classLabel = 'frm_checkbox_label';\n            _this.props.data.value.indexOf(list) > -1 ? classLabel = classLabel + ' selected' : null;\n            return React.createElement(\n                'lable',\n                { onClick: _this.handleClick.bind(this, list), value: list, 'for': _this.props.data.response.index, className: classLabel },\n                React.createElement('i', { className: 'icon_checkbox' }),\n                React.createElement(\n                    'span',\n                    { className: 'lbl_content' },\n                    list\n                )\n            );\n        });\n\n        return React.createElement(\n            'div',\n            { className: mainClass },\n            checkBoxes\n        );\n    }\n});\nvar Inner = React.createClass({\n    displayName: 'Inner',\n\n    getInitialState: function getInitialState() {\n        return {\n            checkbox: {\n                extendClass: 'checkbox_character', //选填，string，扩展class\n                init: [\"男性人物\", \"女性人物\", \"纯文字\", \"食物\", \"植物\", \"猫\", \"狗\", \"熊\", \"猪\", \"熊猫\", \"兔子\", \"猴子\", \"其他\"], //必填，array，有哪些选项\n                value: [\"猪\", \"猴子\"], //必填，array，有哪些被选了\n                reg: { //必填，object，限制\n                    max: 2, //选填，int，例如：最多只能选3个\n                    min: 1 //选填，int，例如：最少只能选1个\n                },\n                handle: this.handleCheckbox, //必填，object，触发的事件\n                response: { //必填，触发事件后，返回值中，还要带回来的值\n                    index: 'CharacterJson', //必填，string，触发事件后，还要带回来的事件id\n                    v: '带回来啦' //选填，触发事件后，还要带回来的值\n                }\n            },\n            result: ''\n        };\n    },\n    handleCheckbox: function handleCheckbox(data) {\n        var stateData = this.state.checkbox;\n        switch (data.index) {\n            case 'CharacterJson':\n                stateData.value = data.value;\n                stateData.status = data.status;\n                break;\n        }\n        this.setState({\n            checkbox: stateData,\n            result: JSON.stringify(data)\n        });\n    },\n    render: function render() {\n        return React.createElement(\n            'div',\n            null,\n            React.createElement(CheckBox, { data: this.state.checkbox }),\n            React.createElement(\n                'p',\n                { className: 'result' },\n                '\\u7ED3\\u679C\\uFF1A',\n                this.state.result\n            )\n        );\n    }\n});\nReact.render(React.createElement(Inner, null), document.getElementById('inner'));\n\nexports.CheckBox = CheckBox;\nexports.Inner = Inner;//# sourceMappingURL=data:application/json;charset=utf-8;base64,")},10:function(module,exports){eval("// removed by extract-text-webpack-plugin//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvd2lkZ2V0cy9jaGVja0JveC9pbmRleC5sZXNzPzk1NmUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL3dpZGdldHMvY2hlY2tCb3gvaW5kZXgubGVzc1xuLy8gbW9kdWxlIGlkID0gMTBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDYiXSwic291cmNlUm9vdCI6IiJ9")}});