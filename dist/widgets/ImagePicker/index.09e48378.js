!function(I){function C(g){if(Q[g])return Q[g].exports;var B=Q[g]={exports:{},id:g,loaded:!1};return I[g].call(B.exports,B,B.exports,C),B.loaded=!0,B.exports}var Q={};return C.m=I,C.c=Q,C.p="",C(0)}({0:function(I,C,Q){I.exports=Q(3)},3:function(module,exports,__webpack_require__){eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Inner = exports.ImagePick = undefined;\n\n__webpack_require__(8);\n\nvar ImagePick = React.createClass({\n    displayName: 'ImagePick',\n\n    getInitialState: function getInitialState() {\n        return {\n            img: this.props.data.img,\n            load: {\n                show: 0,\n                progress: 0\n            },\n            isDragover: 0,\n            isHover: 0\n        };\n    },\n    handleClick: function handleClick() {\n        this.refs.imagePickInput.getDOMNode().click();\n    },\n    //µã»÷ÉÏ´«\n    handleChange: function handleChange(e) {\n        var fileList = e.target.files;\n        this.showPreview(fileList[0]);\n\n        var fileStatus = this.checkPattern(fileList[0]);\n        if (fileStatus.isPass) {\n            //·ûºÏ¸ñÊ½\n            this.upload(fileList[0]);\n        } else {\n            //²»·ûºÏ¸ñÊ½\n            this.response(null, fileStatus.status);\n        }\n    },\n    //Õ¹Ê¾Ô¤ÀÀÍ¼\n    showPreview: function showPreview(file) {\n        var reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = function (e) {\n            this.setState({\n                img: reader.result\n            });\n        }.bind(this);\n    },\n    //ÍÏµ½ÉÏÃæ\n    handleDragOver: function handleDragOver(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        this.setState({\n            isDragover: 1\n        });\n    },\n    //ÒÑ¾­¶ª½øÈ¥\n    handleDrop: function handleDrop(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        this.setState({\n            isDragover: 0\n        });\n        var dt = e.dataTransfer;\n        var files = dt.files;\n        console.log(JSON.stringify(dt));\n        this.showPreview(files[files.length - 1]);\n\n        var fileStatus = this.checkPattern(files[files.length - 1]);\n        if (fileStatus.isPass) {\n            //·ûºÏ¸ñÊ½\n\n            this.upload(files[files.length - 1]);\n            files[files.length - 1] = false;\n        } else {\n            //²»·ûºÏ¸ñÊ½\n            this.response(null, fileStatus.status);\n        }\n        return false;\n    },\n    //¼ì²éÎÄ¼þ¸ñÊ½\n    checkPattern: function checkPattern(file) {\n        var fileType = file.type,\n            response = {};\n        if (fileType.indexOf('image/') >= 0) {\n            //ÊÇÍ¼Æ¬\n            fileType = fileType.replace('image/', '');\n            if (this.props.data.reg.format.indexOf(fileType) >= 0) {\n                //·ûºÏÍ¼Æ¬¸ñÊ½\n                if (this.props.data.reg.size) {\n                    //ÓÐ´óÐ¡ÏÞÖÆ\n                    if (this.props.data.reg.size >= file.size) {\n                        response.isPass = true;\n                    } else {\n                        response.isPass = false;\n                        response.status = 'oversized';\n                    }\n                } else {\n                    //Ã»ÓÐ´óÐ¡ÏÞÖÆ\n                    response.isPass = true;\n                }\n            } else {\n                //²»·ûºÏÍ¼Æ¬¸ñÊ½\n                response.isPass = false;\n                response.status = 'format error';\n            }\n        } else {\n            //²»ÊÇÍ¼Æ¬ ¸ñÊ½´íÎó\n            response.isPass = false;\n            response.status = 'format error';\n        }\n        return response;\n    },\n    //ÍÏ×§Àë¿ª\n    handleDragLeave: function handleDragLeave(e) {\n        this.setState({\n            isDragover: 0\n        });\n    },\n    //ÉÏ´«ÖÐ\n    uploading: function uploading(loaded, total) {\n\n        this.setState({\n            load: {\n                show: 1,\n                progress: loaded / total\n            }\n        });\n    },\n    //²»¹Ü³É¹¦Ê§°Ü£¬ÕâÀïÅ×ÊÂ¼þ\n    response: function response(d, status) {\n        this.setState({\n            load: {\n                show: 0\n            }\n        });\n        var data = {\n            index: this.props.data.responseValue,\n            status: status,\n            value: d\n        };\n        this.props.data.handle(data);\n    },\n    //ÉÏ´«Í¼Æ¬µ½·þÎñÆ÷\n    upload: function upload(file) {\n        (function (file, _this) {\n            var xhr = new XMLHttpRequest(),\n                reader = new FileReader();\n            if (xhr.upload) {\n                // ÉÏ´«ÖÐ\n                xhr.upload.addEventListener(\"progress\", function (e) {\n                    _this.uploading(e.loaded, e.total);\n                }, false);\n                // ¿ªÊ¼ÉÏ´«\n                var data = new FormData();\n                for (var item in _this.props.data.requestValue) {\n                    data.append(item, _this.props.data.requestValue[item]);\n                }\n                data.append('file', file);\n                data.append('name', file.name);\n                data.append('type', file.type);\n                data.append('lastModifiedDate', file.lastModifiedDate);\n                data.append('size', file.size);\n                xhr.open(\"POST\", '/cgi-bin/mmemoticonmgr-bin/uploadmedia', true);\n                xhr.send(data);\n                // ÎÄ¼þÉÏ´«³É¹¦»òÊÇÊ§°Ü\n                xhr.onreadystatechange = function (e) {\n                    if (xhr.readyState == 4) {\n                        if (xhr.status == 200) {\n                            _this.response(JSON.parse(xhr.response), 'suc');\n                        }\n                    }\n                };\n            }\n        })(file, this);\n    },\n    //Êó±êÔÚ×é¼þÉÏ\n    handleMouseoverPick: function handleMouseoverPick(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        if (this.state.isHover != 1) {\n            this.setState({\n                isHover: 1\n            });\n        }\n    },\n    //Êó±êÀë¿ª\n    handleMouseleavePick: function handleMouseleavePick(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        this.setState({\n            isHover: 0\n        });\n    },\n    //É¾³ýÊÂ¼þ\n    handleClickDele: function handleClickDele(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        var data = {\n            index: this.props.data.responseValue,\n            status: 'dele',\n            value: null\n        };\n        this.props.data.handle(data);\n        this.setState({\n            img: null\n        });\n    },\n    render: function render() {\n        var classArea = 'imagePickArea ' + this.props.data.extendClass,\n            contentPickBtn = '+',\n            loadStyle = {\n            width: this.state.load.progress * 100 + '%'\n        },\n            imagePickLoadArea = this.state.load.show == 1 ? React.createElement(\n            'div',\n            { className: 'imagePickLoadArea' },\n            React.createElement(\n                'div',\n                { className: 'loadBar' },\n                React.createElement('div', { className: 'loadContent', style: loadStyle })\n            )\n        ) : null,\n\n        //ÊÇ·ñÐèÒªÉ¾³ý\n        imagePickDeleArea = this.props.data.isNeedDele && this.state.img && this.state.isHover == 1 ? React.createElement(\n            'div',\n            { className: 'imagePickDeleArea' },\n            React.createElement(\n                'a',\n                { href: 'javascript:;', className: 'btn btn_warn', onClick: this.handleClickDele },\n                '\\u5220\\u9664'\n            )\n        ) : null;\n\n        this.state.isHover == 1 ? classArea += ' hover' : null;\n        if (this.state.isDragover == 1) {\n            classArea += ' dragover';\n            this.props.data.text.dragover ? contentPickBtn = this.props.data.text.dragover : null;\n        }\n        /*mouseover mouseleave·ÅÔÚ imagePick ÕâÒ»²ã»áÒ»Ö±´¥·¢*/\n        return React.createElement(\n            'div',\n            { className: classArea, onMouseOver: this.handleMouseoverPick, onMouseLeave: this.handleMouseleavePick, onDragLeave: this.handleDragLeave, onClick: this.handleClick, onDragOver: this.handleDragOver, onDrop: this.handleDrop },\n            React.createElement(\n                'div',\n                { className: 'imagePick' },\n                React.createElement('input', { ref: 'imagePickInput', onChange: this.handleChange, className: 'imagePickUploader_input', type: 'file' }),\n                React.createElement(\n                    'div',\n                    { className: 'imagePickUploader_btn' },\n                    contentPickBtn\n                ),\n                this.state.img ? React.createElement('img', { className: 'imagePickUploader_preview', ref: 'imagePickUploader_preview', src: this.state.img }) : null\n            ),\n            imagePickDeleArea,\n            imagePickLoadArea\n        );\n    }\n});\n\nvar Inner = React.createClass({\n    displayName: 'Inner',\n\n    getInitialState: function getInitialState() {\n        return {\n            imagePick: {\n                extendClass: 'imagePickExtendClass tc', //Ñ¡Ìî£¬string£¬À©Õ¹class\n                img: 'https://sticker.weixin.qq.com/htdocs/zh_CN/images/index/home_item127602b.png', //Ñ¡Ìî£¬string£¬³õÊ¼»¯Ô¤ÀÀÍ¼µØÖ·\n                reg: {\n                    format: 'png', //±ØÌî£¬string£¬ÏÞÖÆµÄÍ¼Æ¬¸ñÊ½\n                    size: 12 * 1024 //Ñ¡Ìî£¬int£¬ÏÞÖÆÍ¼Æ¬µÄ´óÐ¡\n                },\n                text: {\n                    dragover: '松开鼠标' //Ñ¡Ìî£¬string£¬Êó±êÍÏÍ¼Æ¬µ½×é¼þÊ±ºòµÄwording\n                },\n                isNeedDele: true, //Ñ¡Ìî£¬boolean£¬ÊÇ·ñÐèÒªÉ¾³ý²Ù×÷\n                request: '/cgi-bin/mmemoticonmgr-bin/uploadmedia', //±ØÌî£¬string£¬Í¼Æ¬ÉÏ´«cgi\n                requestValue: { //Ñ¡Ìî£¬object£¬postÒª´øµÄ×Ö¶Î\n                    mediaType: 123,\n                    mediaType2: 223,\n                    mediaType3: 323\n                },\n                responseValue: { //Ñ¡Ìî£¬object£¬Òª´ø»ØÀ´µÄÖµ\n                    id: 'imagePickId',\n                    v: '带回来啦'\n                },\n                handle: this.handleImageChange //±ØÌî£¬object£¬Í¼Æ¬ÉÏ´«·µ»Ø´¥·¢µÄÊÂ¼þ£¬·µ»Øid¡¢cgi·µ»ØÖµ\n            },\n            result: ''\n        };\n    },\n    handleImageChange: function handleImageChange(v) {\n        this.setState({\n            result: JSON.stringify(v)\n        });\n    },\n    render: function render() {\n        return React.createElement(\n            'div',\n            { className: 'inner' },\n            React.createElement(ImagePick, { data: this.state.imagePick }),\n            React.createElement(\n                'p',\n                { className: 'result' },\n                '\\u7ED3\\u679C\\u662F\\uFF1A',\n                React.createElement('br', null),\n                this.state.result\n            )\n        );\n    }\n});\n\nReact.render(React.createElement(Inner, null), document.getElementById('inner'));\n\nexports.ImagePick = ImagePick;\nexports.Inner = Inner;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");
},8:function(module,exports){eval("// removed by extract-text-webpack-plugin//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvd2lkZ2V0cy9JbWFnZVBpY2tlci9pbmRleC5sZXNzP2QwNjEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiOC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvd2lkZ2V0cy9JbWFnZVBpY2tlci9pbmRleC5sZXNzXG4vLyBtb2R1bGUgaWQgPSA4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCA4Il0sInNvdXJjZVJvb3QiOiIifQ==")}});